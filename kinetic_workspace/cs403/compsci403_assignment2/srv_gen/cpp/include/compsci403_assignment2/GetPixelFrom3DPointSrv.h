/* Auto-generated by genmsg_cpp for file /home/rpg711/kinetic_workspace/cs403/compsci403_assignment2/srv/GetPixelFrom3DPointSrv.srv */
#ifndef COMPSCI403_ASSIGNMENT2_SERVICE_GETPIXELFROM3DPOINTSRV_H
#define COMPSCI403_ASSIGNMENT2_SERVICE_GETPIXELFROM3DPOINTSRV_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace compsci403_assignment2
{
template <class ContainerAllocator>
struct GetPixelFrom3DPointSrvRequest_ {
  typedef GetPixelFrom3DPointSrvRequest_<ContainerAllocator> Type;

  GetPixelFrom3DPointSrvRequest_()
  : X(0.0)
  , Y(0.0)
  , Z(0.0)
  , fx(0.0)
  , fy(0.0)
  , px(0.0)
  , py(0.0)
  {
  }

  GetPixelFrom3DPointSrvRequest_(const ContainerAllocator& _alloc)
  : X(0.0)
  , Y(0.0)
  , Z(0.0)
  , fx(0.0)
  , fy(0.0)
  , px(0.0)
  , py(0.0)
  {
  }

  typedef float _X_type;
  float X;

  typedef float _Y_type;
  float Y;

  typedef float _Z_type;
  float Z;

  typedef float _fx_type;
  float fx;

  typedef float _fy_type;
  float fy;

  typedef float _px_type;
  float px;

  typedef float _py_type;
  float py;


  typedef boost::shared_ptr< ::compsci403_assignment2::GetPixelFrom3DPointSrvRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::compsci403_assignment2::GetPixelFrom3DPointSrvRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct GetPixelFrom3DPointSrvRequest
typedef  ::compsci403_assignment2::GetPixelFrom3DPointSrvRequest_<std::allocator<void> > GetPixelFrom3DPointSrvRequest;

typedef boost::shared_ptr< ::compsci403_assignment2::GetPixelFrom3DPointSrvRequest> GetPixelFrom3DPointSrvRequestPtr;
typedef boost::shared_ptr< ::compsci403_assignment2::GetPixelFrom3DPointSrvRequest const> GetPixelFrom3DPointSrvRequestConstPtr;



template <class ContainerAllocator>
struct GetPixelFrom3DPointSrvResponse_ {
  typedef GetPixelFrom3DPointSrvResponse_<ContainerAllocator> Type;

  GetPixelFrom3DPointSrvResponse_()
  : x(0)
  , y(0)
  {
  }

  GetPixelFrom3DPointSrvResponse_(const ContainerAllocator& _alloc)
  : x(0)
  , y(0)
  {
  }

  typedef int32_t _x_type;
  int32_t x;

  typedef int32_t _y_type;
  int32_t y;


  typedef boost::shared_ptr< ::compsci403_assignment2::GetPixelFrom3DPointSrvResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::compsci403_assignment2::GetPixelFrom3DPointSrvResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct GetPixelFrom3DPointSrvResponse
typedef  ::compsci403_assignment2::GetPixelFrom3DPointSrvResponse_<std::allocator<void> > GetPixelFrom3DPointSrvResponse;

typedef boost::shared_ptr< ::compsci403_assignment2::GetPixelFrom3DPointSrvResponse> GetPixelFrom3DPointSrvResponsePtr;
typedef boost::shared_ptr< ::compsci403_assignment2::GetPixelFrom3DPointSrvResponse const> GetPixelFrom3DPointSrvResponseConstPtr;


struct GetPixelFrom3DPointSrv
{

typedef GetPixelFrom3DPointSrvRequest Request;
typedef GetPixelFrom3DPointSrvResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct GetPixelFrom3DPointSrv
} // namespace compsci403_assignment2

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::compsci403_assignment2::GetPixelFrom3DPointSrvRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::compsci403_assignment2::GetPixelFrom3DPointSrvRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::compsci403_assignment2::GetPixelFrom3DPointSrvRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "3d59a98fd7c3498173f17e0b67577718";
  }

  static const char* value(const  ::compsci403_assignment2::GetPixelFrom3DPointSrvRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x3d59a98fd7c34981ULL;
  static const uint64_t static_value2 = 0x73f17e0b67577718ULL;
};

template<class ContainerAllocator>
struct DataType< ::compsci403_assignment2::GetPixelFrom3DPointSrvRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "compsci403_assignment2/GetPixelFrom3DPointSrvRequest";
  }

  static const char* value(const  ::compsci403_assignment2::GetPixelFrom3DPointSrvRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::compsci403_assignment2::GetPixelFrom3DPointSrvRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "float32 X\n\
float32 Y\n\
float32 Z\n\
float32 fx\n\
float32 fy\n\
float32 px\n\
float32 py\n\
\n\
";
  }

  static const char* value(const  ::compsci403_assignment2::GetPixelFrom3DPointSrvRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::compsci403_assignment2::GetPixelFrom3DPointSrvRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::compsci403_assignment2::GetPixelFrom3DPointSrvResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::compsci403_assignment2::GetPixelFrom3DPointSrvResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::compsci403_assignment2::GetPixelFrom3DPointSrvResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bd7b43fd41d4c47bf5c703cc7d016709";
  }

  static const char* value(const  ::compsci403_assignment2::GetPixelFrom3DPointSrvResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xbd7b43fd41d4c47bULL;
  static const uint64_t static_value2 = 0xf5c703cc7d016709ULL;
};

template<class ContainerAllocator>
struct DataType< ::compsci403_assignment2::GetPixelFrom3DPointSrvResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "compsci403_assignment2/GetPixelFrom3DPointSrvResponse";
  }

  static const char* value(const  ::compsci403_assignment2::GetPixelFrom3DPointSrvResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::compsci403_assignment2::GetPixelFrom3DPointSrvResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int32 x\n\
int32 y\n\
\n\
\n\
";
  }

  static const char* value(const  ::compsci403_assignment2::GetPixelFrom3DPointSrvResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::compsci403_assignment2::GetPixelFrom3DPointSrvResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::compsci403_assignment2::GetPixelFrom3DPointSrvRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.X);
    stream.next(m.Y);
    stream.next(m.Z);
    stream.next(m.fx);
    stream.next(m.fy);
    stream.next(m.px);
    stream.next(m.py);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER
}; // struct GetPixelFrom3DPointSrvRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::compsci403_assignment2::GetPixelFrom3DPointSrvResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.x);
    stream.next(m.y);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER
}; // struct GetPixelFrom3DPointSrvResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<compsci403_assignment2::GetPixelFrom3DPointSrv> {
  static const char* value() 
  {
    return "b039961e010bc170845e49157d7e7828";
  }

  static const char* value(const compsci403_assignment2::GetPixelFrom3DPointSrv&) { return value(); } 
};

template<>
struct DataType<compsci403_assignment2::GetPixelFrom3DPointSrv> {
  static const char* value() 
  {
    return "compsci403_assignment2/GetPixelFrom3DPointSrv";
  }

  static const char* value(const compsci403_assignment2::GetPixelFrom3DPointSrv&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<compsci403_assignment2::GetPixelFrom3DPointSrvRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "b039961e010bc170845e49157d7e7828";
  }

  static const char* value(const compsci403_assignment2::GetPixelFrom3DPointSrvRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<compsci403_assignment2::GetPixelFrom3DPointSrvRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "compsci403_assignment2/GetPixelFrom3DPointSrv";
  }

  static const char* value(const compsci403_assignment2::GetPixelFrom3DPointSrvRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<compsci403_assignment2::GetPixelFrom3DPointSrvResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "b039961e010bc170845e49157d7e7828";
  }

  static const char* value(const compsci403_assignment2::GetPixelFrom3DPointSrvResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<compsci403_assignment2::GetPixelFrom3DPointSrvResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "compsci403_assignment2/GetPixelFrom3DPointSrv";
  }

  static const char* value(const compsci403_assignment2::GetPixelFrom3DPointSrvResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // COMPSCI403_ASSIGNMENT2_SERVICE_GETPIXELFROM3DPOINTSRV_H

